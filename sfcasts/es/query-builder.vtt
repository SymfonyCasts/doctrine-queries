WEBVTT

00:00:01.206 --> 00:00:06.756 align:middle
Es realmente poderoso comprender que DQL es, en
última instancia, lo que se utiliza entre bastidores

00:00:06.756 --> 00:00:07.316 align:middle
en Doctrine.

00:00:07.666 --> 00:00:10.996 align:middle
Pero la mayoría de las veces, no vamos
a construir esta cadena DQL a mano.

00:00:11.506 --> 00:00:15.256 align:middle
No, vamos a utilizar algo
llamado "QueryBuilder".

00:00:15.256 --> 00:00:18.106 align:middle
Ooooh. Comenta el DQL.

00:00:18.516 --> 00:00:20.436 align:middle
Vamos a reconstruir esto con el QueryBuilder.

00:00:20.876 --> 00:00:25.996 align:middle
Empieza con $qb (por "QueryBuilder")
= $this->createQueryBuilder().

00:00:27.016 --> 00:00:28.796 align:middle
Dentro, digamos category.

00:00:29.636 --> 00:00:34.126 align:middle
Como estamos dentro de CategoryRepository,
cuando decimos createQueryBuilder(),

00:00:34.346 --> 00:00:42.166 align:middle
eso añade automáticamente FROM
App\Entity\Category y lo aliasa a category,

00:00:42.586 --> 00:00:44.836 align:middle
ya que eso es lo que pasamos como argumento.

00:00:45.416 --> 00:00:48.166 align:middle
Esto también selecciona todo por defecto.

00:00:48.736 --> 00:00:53.716 align:middle
Así que... ¡con sólo esto, ya hemos
recreado la mayor parte de esta consulta!

00:00:54.506 --> 00:01:01.136 align:middle
Para añadir el siguiente punto, puedes encadenar
esto: ->addOrderBy() con category.name.

00:01:01.596 --> 00:01:07.426 align:middle
Luego usaré esta clase Criteria ( pulsa
"tab" para autocompletarlo) seguida de DESC.

00:01:08.056 --> 00:01:11.156 align:middle
O puedes poner simplemente la
cadena 'DESC': es lo mismo.

00:01:12.086 --> 00:01:13.716 align:middle
¡QueryBuilder listo!

00:01:14.306 --> 00:01:17.436 align:middle
Para ejecutarlo, seguimos
necesitando ese objeto Query.

00:01:17.836 --> 00:01:20.616 align:middle
Ahora podemos obtenerlo con $qb->getQuery().

00:01:21.506 --> 00:01:28.596 align:middle
Internamente, esto debería generar exactamente
el mismo DQL que antes, ¡y puedo probarlo!

00:01:29.186 --> 00:01:36.526 align:middle
Añade un dd() con $query y, en lugar de
decir ->getSQL(), di ->getDQL().

00:01:37.726 --> 00:01:39.146 align:middle
Cuando probemos eso...

00:01:39.856 --> 00:01:43.226 align:middle
¡sí! ¡Es exactamente
lo que escribimos antes!

00:01:43.786 --> 00:01:47.906 align:middle
Así que, sin sorpresas, si
eliminamos ese dd() y actualizamos...

00:01:48.466 --> 00:01:50.246 align:middle
¡volvemos a funcionar!

00:01:50.536 --> 00:01:51.856 align:middle
Así de fácil.

00:01:52.726 --> 00:01:55.336 align:middle
Vale, ya tenemos lo básico del QueryBuilder.

00:01:55.826 --> 00:02:01.036 align:middle
Pongámonos más complejos añadiendo
a continuación andWhere() y orWhere().
